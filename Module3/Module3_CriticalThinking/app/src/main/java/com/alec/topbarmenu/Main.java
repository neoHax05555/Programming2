/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.alec.topbarmenu;

import javafx.application.Application;
import javafx.scene.Scene;
import javafx.scene.control.MenuItem;
import javafx.scene.control.TextField;
import javafx.scene.layout.VBox;
import javafx.scene.paint.Color;
import javafx.stage.Stage;
import javafx.scene.control.Menu;
import javafx.scene.control.MenuBar;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;


public class Main extends Application {
    // Constants.
    private static final String DIR_NAME = "tmp";
    private static final String FILE_NAME = "log.txt";

    // Member variables.
    private TextField mTextField;
    private VBox mVBox;
    private MenuBar mMenuBar;

    @Override
    public void start(Stage stage) throws Exception {
        // Define menu bar.

        MenuItem menuItem1 = new MenuItem("Set Date");
        menuItem1.setOnAction(actionEvent -> {
            actionEvent.consume();
            this.setDate();
        });
        MenuItem menuItem2 = new MenuItem("Save Date");
        menuItem2.setOnAction(actionEvent -> {
            actionEvent.consume();
            this.saveDate();
        });
        MenuItem menuItem3 = new MenuItem("Random Background");
        menuItem3.setOnAction(actionEvent -> {
            actionEvent.consume();
            this.setRandomGreenBackgroundColor();
        });
        MenuItem menuItem4 = new MenuItem("Exit");
        menuItem4.setOnAction(actionEvent -> {
            actionEvent.consume();
            System.out.println("Exit");
            System.exit(0);
        });

        Menu menu = new Menu("Menu", null, menuItem1, menuItem2, menuItem3, menuItem4);
        this.mMenuBar = new MenuBar(menu);
        this.mVBox = new VBox(this.mMenuBar);

        // Define text box.
        this.mTextField = new TextField("Press a button to begin.");
        // Disable write access for user in TextField.
        this.mTextField.setDisable(true);
        this.mVBox.getChildren().add(this.mTextField);

        // Define scene.
        Scene scene = new Scene(this.mVBox,400,400, Color.BLACK);

        // Set stage.
        stage.setTitle("Top Bar Menu App");
        stage.setScene(scene);
        stage.show();
    }

    public static void main(String[] args) {
        launch(args);
    }

    /**
     * Set the date to the TextField.
     */
    private void setDate() {
        System.out.println("Set Date");
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("MM/dd/yyyy HH:mm:ss");
        LocalDateTime now = LocalDateTime.now();
        String curDate = dtf.format(now);

        this.mTextField.setText(curDate);
    }

    /**
     * Save the date from the text field.
     */
    private void saveDate() {
        System.out.println("Save Date");
        printToFile(this.mTextField.getText());
    }

    /**
     * Sets a random green background color.
     */
    private void setRandomGreenBackgroundColor() {
        System.out.println("Random Background");
        this.mVBox.setStyle("-fx-background-color: #00ff00");
        this.mMenuBar.setStyle("-fx-background-color: #00ff00");
    }

    /**
     * System independent method to write a {@link String} to a file. In the
     * current working directory we will create a directory and file called
     * tmp/log.txt
     *
     * @param input A {@link String} to save to tmp/log.txt.
     */
    private static void printToFile(String input) {
        /*
         * Get cwd and append the dirname, should be potable across systems,
         * i`m on linux you may be on windows based on location you posted.
         * (no C:\ drive in linux)
         */
        File fileLocation = new File(new File(".").getAbsolutePath(), DIR_NAME);
        File file = new File(fileLocation, FILE_NAME);

        // Create dir if DNE.
        if (fileLocation.mkdir()) {
            if (!fileLocation.exists()) {
                // Already init to false, so a failure to create dir will return false.
                System.out.println("Failed to create dir.");
                return;
            }
        }

        try (FileOutputStream fos = new FileOutputStream(file)) {
            fos.write((input + "\n").getBytes());
            fos.flush();
            System.out.println("Wrote to file: " + file);
        } catch (IOException e) {
            System.out.println("Failed to write output.\n" + e);
        }
    }
}
